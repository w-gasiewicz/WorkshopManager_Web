{"version":3,"sources":["services/History.jsx","views/Login.jsx","views/Contact.jsx","views/AnalyticsView.jsx","services/Validation.jsx","configs/Data.jsx","services/Export.jsx","components/AddItemDragablePopup.jsx","components/EditItemDragablePopup.jsx","components/DeleteItemDragablePopup.jsx","components/WijmoGrid.jsx","configs/ParticlesConfig.js","App.jsx","reportWebVitals.ts","index.jsx"],"names":["createBrowserHistory","Login","props","handleChangeUsername","e","setState","username","currentTarget","value","handleChangePassword","password","handleLogin","populateData","history","push","loggedIn","state","showAllert","bind","this","a","fetch","response","json","data","console","log","className","exact","to","style","fontSize","type","placeholder","onChange","margin","onClick","href","target","Component","displayName","name","Contact","rows","required","AnalyticsView","RequiredValidator","message","wjcCore","str","String","MinValueValidator","minValue","format","0","1","_formatValue","MaxValueValidator","maxValue","MinNumberValidator","formatNumber","MaxNumberValidator","MinDateValidator","formatDate","MaxDateValidator","KeyValue","NotFound","key","Country","id","flag","DataService","_products","_colors","_countries","_validationConfig","Date","length","_getRandomArray","count","year","getFullYear","itemsCount","Math","max","i","item","_getItem","price","date","time","undefined","prop","validators","validationError","validate","countryIndex","_getRandomIndex","productIndex","colorIndex","getTime","random","countryId","productId","colorId","change","getHistoryData","discount","rating","_getRating","active","size","floor","weight","quantity","description","ceil","arr","len","FakeColumn","wjcGrid","FakeRow","Fonts","ZapfDingbatsSm","wjcPdf","ZapfDingbatsLg","ExportService","flex","successCallback","errorCallback","progressCallback","wjcGridXlsx","saveAsync","includeColumnHeaders","includeCellStyles","formatItem","_formatExcelItem","doneCollback","cancelAsync","options","wjcGridPdf","export","maxPages","exportMode","All","scaleMode","ActualSize","documentOptions","pageSettings","layout","Landscape","header","declarative","text","footer","styles","cellStyle","backgroundColor","borderColor","altCellStyle","groupCellStyle","headerCellStyle","errorCellStyle","customCellContent","_formatPdfItem","panel","cellType","Cell","grid","_getError","row","col","fill","wjcXlsx","color","xlsxCell","ctx","exporting","progress","preparing","columns","binding","_formatPdfCountryCell","countryMap","_formatPdfColorCell","colorMap","_formatPdfChangeCell","getCellData","cell","_createCellFromCellTemplate","historyCellTemplate","_formatPdfHistoryCell","_formatPdfRatingCell","drawBackground","countryName","_isCountryExist","contentRect","image","canvas","openImage","toLowerCase","imageTop","top","height","drawImage","left","drawText","width","textTop","cancel","colorName","_isColorExist","imageHeight","min","imageWidth","paths","rect","fillAndStroke","fromString","cellData","changeText","changeIndicator","changeColor","indent","right","brush","font","align","Right","svgUrl","_getHistorySvgDataUrlFromCell","clientRect","cr","drawSvg","dataUrl","svg","getElementsByTagName","clone","cloneNode","setAttribute","setAttributeNS","overflow","stroke","s","document","createElement","innerHTML","defs","appendChild","insertBefore","firstChild","outer","btoa","unescape","encodeURIComponent","Number","ratingNormalColor","fromRgba","ratingLightColor","y","x","getKeyValue","cellTemplate","AddItemDragablePopup","initLoginForm","popup","frmLoginPopup","PopupForm","show","isDraggable","initialized","pattern","title","React","EditItemDragablePopup","DeleteItemDragablePopup","dataService","exportService","WijmoGrid","countryCellTemplate","country","_countryMap","getDataItem","colorCellTemplate","_colorMap","background","changeCellTemplate","cssClass","displayValue","wjCore","gridInitialized","ctl","itemsSource","_createItemsSource","itemsCountChanged","parseInt","collectionChanged","removeAllHandlers","_lastId","exportToExcel","isExcelPreparing","isExcelExporting","resetState","excelProgress","cancelExcelExport","startExcelExport","err","error","prg","exportToPdf","_historyCellTemplate","showAddPopup","theGrid","theSearch","_productMap","_buildDataMap","getProducts","DataMap","getCountries","getColors","_dateEditor","InputDate","isRequired","_timeEditor","InputTime","CellMaker","makeSparkline","markers","SparklineMarkers","High","Low","maxPoints","label","_ratingCellTemplate","makeRating","range","current","control","ref","cssMatch","autoGenerateColumns","allowAddNew","allowDelete","allowPinning","showMarquee","selectionMode","validateEdits","isReadOnly","editor","dataMap","template","allowSorting","ratingCellTemplate","productMap","disabled","counter","getData","view","getError","getColumn","addHandler","action","Add","items","map","particlesConfig","App","position","params","ParticlesConfig","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","baseUrl","rootElement","getElementById","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.43bca305.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history'\r\n\r\nexport default createBrowserHistory()","import { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport history from '../services/History';\r\nimport '../styles/Login.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\nexport class Login extends Component {\r\n    static displayName = Login.name;\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { username: '', password: '', showAllert: false, loggedIn: false }\r\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\r\n        this.handleChangePassword = this.handleChangePassword.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loggedIn: false });\r\n    }\r\n    async populateData() {\r\n        const response = await fetch('https://api.ratesapi.io/api/2021-04-01' /*+ this.state.date*/ + '?base=PLN');\r\n        const data = await response.json();\r\n        console.log(data);\r\n        //this.setState({ values: data, loading: false });\r\n    }\r\n\r\n    handleChangeUsername = (e) => {\r\n        this.setState({ username: e.currentTarget.value });\r\n    }\r\n    handleChangePassword = (e) => {\r\n        this.setState({ password: e.currentTarget.value });\r\n    }\r\n    handleLogin = () => {\r\n        this.populateData();\r\n        history.push('/WorkshopManager_Web/WijmoGrid');\r\n        this.setState({ loggedIn: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-container\">\r\n                {\r\n                    this.state.loggedIn ?\r\n                        < Redirect exact to=\"/WorkshopManager_Web/WijmoGrid\" /> : null\r\n                }\r\n                <div className=\"form-box\">\r\n                    <div className=\"header-form\">\r\n                        <h4 className=\"text-primary text-center\"><i className=\"fa fa-user-circle\" style={{ fontSize: \"110px\" }}></i></h4>\r\n                        <div className=\"image\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"body-form\">\r\n                        <form>\r\n                            <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\"><i className=\"fa fa-user\"></i></span>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Username\" onChange={this.handleChangeUsername} />\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\"><i className=\"fa fa-lock\"></i></span>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Password\" onChange={this.handleChangePassword} />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-secondary btn-block\" style={{ margin: 0 }} onClick={this.handleLogin}>LOGIN</button>\r\n                            <div className=\"message\">\r\n                                <div><input type=\"checkbox\" /> Remember ME</div>\r\n                                <div><a href=\"#\">Forgot your password</a></div>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"social\">\r\n                            <a href=\"https://github.com/w-gasiewicz\" target=\"_blank\"><i className=\"fab fa-github\"></i></a>\r\n                            <a href=\"https://www.linkedin.com/in/wojciech-gasiewicz/\" target=\"_blank\"><i className=\"fab fa-linkedin\"></i></a>\r\n                            <a href=\"#\" target=\"_blank\"><i className=\"fab fa-facebook\"></i></a>\r\n                            <a href=\"#\" target=\"_blank\"><i className=\"fab fa-twitter-square\"></i></a>\r\n                            <a href=\"#\" target=\"_blank\"><i className=\"fab fa-google\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login;\r\n","import { Component } from 'react';\r\nimport '../styles/Contact.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\nexport class Contact extends Component {\r\n    static displayName = Contact.name;\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"contact-container\">\r\n                <div className=\"form-box-contact\">\r\n                    <div className=\"header-form\">\r\n                        <h4 className=\"text-primary text-center\"><i className=\"fa fa-envelope\" style={{ fontSize: \"110px\" }}></i></h4>\r\n                        <div className=\"image\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"body-form\">\r\n                        <form>\r\n                            <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\"><i className=\"fa fa-user\"></i></span>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Subject\" />\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\"><i className=\"fa fa-at\"></i></span>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Your email\" />\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\"><i className=\"fa fa-comment-dots\"></i></span>\r\n                                </div>\r\n                                <textarea className=\"form-control\" rows={3} placeholder=\"Message\" required></textarea>\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-secondary btn-block\">Send</button>\r\n                        </form>\r\n                        <div className=\"social\">\r\n                            <a href=\"#\"><i className=\"fab fa-facebook\"></i></a>\r\n                            <a href=\"#\"><i className=\"fab fa-twitter-square\"></i></a>\r\n                            <a href=\"#\"><i className=\"fab fa-google\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Component } from 'react';\r\nimport '../styles/AnalyticsView.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\nexport class AnalyticsView extends Component {\r\n    static displayName = AnalyticsView.name;\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"form-box-contact\">\r\n                    <div className=\"header-form\">\r\n                        <h4 className=\"text-primary text-center\"><i className=\"fas fa-chart-line\" style={{ fontSize: \"110px\" }}></i></h4>\r\n                        <div className=\"image\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"body-form\">\r\n                        <form>\r\n                            <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\"><i className=\"fa fa-user\"></i></span>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Subject\" />\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\"><i className=\"fa fa-at\"></i></span>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Your email\" />\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\"><i className=\"fa fa-comment-dots\"></i></span>\r\n                                </div>\r\n                                <textarea className=\"form-control\" rows={3} placeholder=\"Message\" required></textarea>\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-secondary btn-block\">Analytics</button>\r\n                        </form>\r\n                        <div className=\"social\">\r\n                            <a href=\"#\"><i className=\"fas fa-dot-circle\"></i></a>\r\n                            <a href=\"#\"><i className=\"fas fa-dot-circle\"></i></a>\r\n                            <a href=\"#\"><i className=\"fas fa-dot-circle\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import * as wjcCore from '@grapecity/wijmo';\nexport class RequiredValidator {\n    validate(name, value) {\n        const message = name + ' is required';\n        if (wjcCore.isUndefined(value)) {\n            return message;\n        }\n        const str = wjcCore.changeType(value, wjcCore.DataType.String);\n        if (wjcCore.isNullOrWhiteSpace(str)) {\n            return message;\n        }\n        return '';\n    }\n}\nexport class MinValueValidator {\n    constructor(minValue, message = '{0} can\\'t be less than {1}', format = null) {\n        this.minValue = minValue;\n        this.message = message;\n        this.format = format;\n    }\n    validate(name, value) {\n        if (value < this.minValue) {\n            return wjcCore.format(this.message, {\n                0: name,\n                1: this._formatValue(this.minValue)\n            });\n        }\n        return '';\n    }\n}\nexport class MaxValueValidator {\n    constructor(maxValue, message = '{0} can\\'t be greater than {1}', format = null) {\n        this.maxValue = maxValue;\n        this.message = message;\n        this.format = format;\n    }\n    validate(name, value) {\n        if (value > this.maxValue) {\n            return wjcCore.format(this.message, {\n                0: name,\n                1: this._formatValue(this.maxValue)\n            });\n        }\n        return '';\n    }\n}\nexport class MinNumberValidator extends MinValueValidator {\n    constructor(minValue, message = '{0} can\\'t be less than {1}', format = 'n') {\n        super(minValue, message, format);\n    }\n    _formatValue(value) {\n        return wjcCore.Globalize.formatNumber(value, this.format);\n    }\n}\nexport class MaxNumberValidator extends MaxValueValidator {\n    constructor(maxValue, message = '{0} can\\'t be greater than {1}', format = 'n') {\n        super(maxValue, message, format);\n    }\n    _formatValue(value) {\n        return wjcCore.Globalize.formatNumber(value, this.format);\n    }\n}\nexport class MinDateValidator extends MinValueValidator {\n    constructor(minValue, message = '{0} can\\'t be less than {1}', format = 'MM/dd/yyyy') {\n        super(minValue, message, format);\n    }\n    _formatValue(value) {\n        return wjcCore.Globalize.formatDate(value, this.format);\n    }\n}\nexport class MaxDateValidator extends MaxValueValidator {\n    constructor(maxValue, message = '{0} can\\'t be greater than {1}', format = 'MM/dd/yyyy') {\n        super(maxValue, message, format);\n    }\n    _formatValue(value) {\n        return wjcCore.Globalize.formatDate(value, this.format);\n    }\n}\n","import * as wjcCore from '@grapecity/wijmo';\nimport { RequiredValidator, MinNumberValidator, MinDateValidator, MaxNumberValidator, MaxDateValidator } from '../services/Validation';\n//\nexport class KeyValue {\n}\nKeyValue.NotFound = { key: -1, value: '' };\n//\nexport class Country {\n}\nCountry.NotFound = { id: -1, name: '', flag: '' };\n//\nexport class DataService {\n    constructor() {\n        this._products = ['Widget', 'Gadget', 'Doohickey'];\n        this._colors = ['Black', 'White', 'Red', 'Green', 'Blue'];\n        this._countries = [\n            { id: 0, name: 'US', flag: 'us' },\n            { id: 1, name: 'Germany', flag: 'de' },\n            { id: 2, name: 'UK', flag: 'gb' },\n            { id: 3, name: 'Japan', flag: 'jp' },\n            { id: 4, name: 'Italy', flag: 'it' },\n            { id: 5, name: 'Greece', flag: 'gr' }\n        ];\n        this._validationConfig = {\n            'date': [\n                new RequiredValidator(),\n                new MinDateValidator(new Date('2000-01-01T00:00:00')),\n                new MaxDateValidator(new Date('2100-01-01T00:00:00'))\n            ],\n            'time': [\n                new RequiredValidator(),\n                new MinDateValidator(new Date('2000-01-01T00:00:00')),\n                new MaxDateValidator(new Date('2100-01-01T00:00:00'))\n            ],\n            'productId': [\n                new RequiredValidator(),\n                new MinNumberValidator(0, `{0} can't be less than {1} (${this._products[0]})`),\n                new MaxNumberValidator(this._products.length - 1, `{0} can't be greater than {1} (${this._products[this._products.length - 1]})`)\n            ],\n            'countryId': [\n                new RequiredValidator(),\n                new MinNumberValidator(0, `{0} can't be less than {1} (${this._countries[0].name})`),\n                new MaxNumberValidator(this._countries.length - 1, `{0} can't be greater than {1} (${this._countries[this._countries.length - 1].name})`)\n            ],\n            'colorId': [\n                new RequiredValidator(),\n                new MinNumberValidator(0, `{0} can't be less than {1} (${this._colors[0]})`),\n                new MaxNumberValidator(this._colors.length - 1, `{0} can't be greater than {1} (${this._colors[this._colors.length - 1]})`)\n            ],\n            'price': [\n                new RequiredValidator(),\n                new MinNumberValidator(0, `Price can't be a negative value`)\n            ]\n        };\n    }\n    getCountries() {\n        return this._countries;\n    }\n    getProducts() {\n        return this._products;\n    }\n    getColors() {\n        return this._colors;\n    }\n    getHistoryData() {\n        return this._getRandomArray(25, 100);\n    }\n    getData(count) {\n        const data = [];\n        const dt = new Date();\n        const year = dt.getFullYear();\n        const itemsCount = Math.max(count, 5);\n        // add items\n        for (let i = 0; i < itemsCount; i++) {\n            const item = this._getItem(i, year);\n            data.push(item);\n        }\n        // set invalid data to demonstrate errors visualization\n        data[1].price = -2000;\n        data[2].date = new Date('1970-01-01T00:00:00');\n        data[4].time = undefined;\n        data[4].price = -1000;\n        return data;\n    }\n    validate(item, prop, displayName) {\n        const validators = this._validationConfig[prop];\n        if (wjcCore.isUndefined(validators)) {\n            return '';\n        }\n        const value = item[prop];\n        for (let i = 0; i < validators.length; i++) {\n            const validationError = validators[i].validate(displayName, value);\n            if (!wjcCore.isNullOrWhiteSpace(validationError)) {\n                return validationError;\n            }\n        }\n    }\n    _getItem(i, year) {\n        const date = new Date(year, i % 12, 25, i % 24, i % 60, i % 60);\n        const countryIndex = this._getRandomIndex(this._countries);\n        const productIndex = this._getRandomIndex(this._products);\n        const colorIndex = this._getRandomIndex(this._colors);\n        const item = {\n            id: i,\n            date: date,\n            time: new Date(date.getTime() + Math.random() * 30 * (24 * 60 * 60 * 1000)),\n            countryId: this._countries[countryIndex].id,\n            productId: productIndex,\n            colorId: colorIndex,\n            price: wjcCore.toFixed(Math.random() * 10000 + 5000, 2, true),\n            change: wjcCore.toFixed(Math.random() * 1000 - 500, 2, true),\n            history: this.getHistoryData(),\n            discount: wjcCore.toFixed(Math.random() / 4, 2, true),\n            rating: this._getRating(),\n            active: i % 4 == 0,\n            size: Math.floor(100 + Math.random() * 900),\n            weight: Math.floor(100 + Math.random() * 900),\n            quantity: Math.floor(Math.random() * 10),\n            description: \"Across all our software products and services, our focus is on helping our customers achieve their goals. Our key principles – thoroughly understanding our customers' business objectives, maintaining a strong emphasis on quality, and adhering to the highest ethical standards – serve as the foundation for everything we do.\"\n        };\n        return item;\n    }\n    _getRating() {\n        return Math.ceil(Math.random() * 5);\n    }\n    _getRandomIndex(arr) {\n        return Math.floor(Math.random() * arr.length);\n    }\n    _getRandomArray(len, maxValue) {\n        const arr = [];\n        for (let i = 0; i < len; i++) {\n            arr.push(Math.floor(Math.random() * maxValue));\n        }\n        return arr;\n    }\n}\n","import * as wjcCore from '@grapecity/wijmo';\nimport * as wjcGrid from '@grapecity/wijmo.grid';\nimport * as wjcGridPdf from '@grapecity/wijmo.grid.pdf';\nimport * as wjcGridXlsx from '@grapecity/wijmo.grid.xlsx';\nimport * as wjcPdf from '@grapecity/wijmo.pdf';\nimport * as wjcXlsx from '@grapecity/wijmo.xlsx';\nimport { KeyValue, Country } from '../configs/Data';\n//\nconst ExcelExportDocName = 'FlexGrid.xlsx';\nconst PdfExportDocName = 'FlexGrid.pdf';\nconst FakeColumn = new wjcGrid.Column();\nconst FakeRow = new wjcGrid.Row();\n//\nclass Fonts {\n}\nFonts.ZapfDingbatsSm = new wjcPdf.PdfFont('zapfdingbats', 8, 'normal', 'normal');\nFonts.ZapfDingbatsLg = new wjcPdf.PdfFont('zapfdingbats', 16, 'normal', 'normal');\n//\nexport class IExcelExportContext {\n}\n//\nexport class ExportService {\n    startExcelExport(flex, successCallback, errorCallback, progressCallback) {\n        wjcGridXlsx.FlexGridXlsxConverter.saveAsync(flex, {\n            includeColumnHeaders: true,\n            includeCellStyles: false,\n            formatItem: this._formatExcelItem.bind(this)\n        }, ExcelExportDocName, successCallback, errorCallback, progressCallback, true);\n    }\n    cancelExcelExport(doneCollback) {\n        wjcGridXlsx.FlexGridXlsxConverter.cancelAsync(doneCollback);\n    }\n    exportToPdf(flex, options) {\n        wjcGridPdf.FlexGridPdfConverter.export(flex, PdfExportDocName, {\n            maxPages: 100,\n            exportMode: wjcGridPdf.ExportMode.All,\n            scaleMode: wjcGridPdf.ScaleMode.ActualSize,\n            documentOptions: {\n                pageSettings: {\n                    layout: wjcPdf.PdfPageOrientation.Landscape\n                },\n                header: {\n                    declarative: {\n                        text: '\\t&[Page]\\\\&[Pages]'\n                    }\n                },\n                footer: {\n                    declarative: {\n                        text: '\\t&[Page]\\\\&[Pages]'\n                    }\n                }\n            },\n            styles: {\n                cellStyle: {\n                    backgroundColor: '#ffffff',\n                    borderColor: '#c6c6c6'\n                },\n                altCellStyle: {\n                    backgroundColor: '#f9f9f9'\n                },\n                groupCellStyle: {\n                    backgroundColor: '#dddddd'\n                },\n                headerCellStyle: {\n                    backgroundColor: '#eaeaea'\n                },\n                // Highlight Invalid Cells\n                errorCellStyle: {\n                    backgroundColor: 'rgba(255, 0, 0, 0.3)'\n                }\n            },\n            customCellContent: false,\n            formatItem: (e) => this._formatPdfItem(e, options)\n        });\n    }\n    _formatExcelItem(e) {\n        const panel = e.panel;\n        if (panel.cellType !== wjcGrid.CellType.Cell) {\n            return;\n        }\n        // highlight invalid cells\n        if (panel.grid._getError(panel, e.row, e.col)) {\n            const fill = new wjcXlsx.WorkbookFill();\n            fill.color = '#ff0000';\n            e.xlsxCell.style.fill = fill;\n        }\n    }\n    _resetExcelContext(ctx) {\n        ctx.exporting = false;\n        ctx.progress = 0;\n        ctx.preparing = false;\n    }\n    _formatPdfItem(e, options) {\n        const panel = e.panel;\n        if (panel.cellType !== wjcGrid.CellType.Cell) {\n            return;\n        }\n        switch (panel.columns[e.col].binding) {\n            case 'countryId':\n                this._formatPdfCountryCell(e, options.countryMap);\n                break;\n            case 'colorId':\n                this._formatPdfColorCell(e, options.colorMap);\n                break;\n            case 'change':\n                this._formatPdfChangeCell(e);\n                break;\n            case 'history':\n                /*** Version #1: get grid cell produced before by a cell template ***/\n                // const cell = e.getFormattedCell();\n                // this._formatPdfHistoryCell(e, cell);\n                /*** Version #2: create fake cell from a cell template ***/\n                const history = e.panel.getCellData(e.row, e.col, false);\n                const cell = this._createCellFromCellTemplate(options.historyCellTemplate, history);\n                this._formatPdfHistoryCell(e, cell);\n                break;\n            case 'rating':\n                this._formatPdfRatingCell(e);\n                break;\n        }\n    }\n    _formatPdfCountryCell(e, countryMap) {\n        e.drawBackground(e.style.backgroundColor);\n        // check whether country exists\n        const countryName = e.data;\n        if (this._isCountryExist(countryName, countryMap)) {\n            // bound rectangle of cell's content area\n            const contentRect = e.contentRect;\n            // draw flag image\n            const image = e.canvas.openImage(`resources/${countryName.toLowerCase()}.png`);\n            const imageTop = contentRect.top + (contentRect.height - image.height) / 2;\n            e.canvas.drawImage(image, contentRect.left, imageTop);\n            // draw country name\n            e.canvas.drawText(countryName, contentRect.left + image.width + 3, e.textTop);\n        }\n        // cancel standard cell content drawing\n        e.cancel = true;\n    }\n    _formatPdfColorCell(e, colorMap) {\n        e.drawBackground(e.style.backgroundColor);\n        // check whether color exists\n        const colorName = e.data;\n        if (this._isColorExist(colorName, colorMap)) {\n            // bound rectangle of cell's content area\n            const contentRect = e.contentRect;\n            // draw color indicator\n            const imageHeight = Math.min(10, contentRect.height);\n            const imageWidth = 1.33 * imageHeight;\n            const imageTop = contentRect.top + (contentRect.height - imageHeight) / 2;\n            e.canvas.paths\n                .rect(contentRect.left, imageTop, imageWidth, imageHeight)\n                .fillAndStroke(wjcCore.Color.fromString(colorName), wjcCore.Color.fromString('gray'));\n            // draw color name\n            e.canvas.drawText(colorName, contentRect.left + imageWidth + 3, e.textTop);\n        }\n        // cancel standard cell content drawing\n        e.cancel = true;\n    }\n    _formatPdfChangeCell(e) {\n        e.drawBackground(e.style.backgroundColor);\n        // get change value and text\n        const cellData = e.panel.getCellData(e.row, e.col, false);\n        let change = 0;\n        let changeText = '';\n        if (wjcCore.isNumber(cellData)) {\n            change = cellData;\n            changeText = wjcCore.Globalize.formatNumber(change, 'c');\n        }\n        else if (!wjcCore.isUndefined(cellData) && cellData !== null) {\n            changeText = wjcCore.changeType(cellData, wjcCore.DataType.String);\n        }\n        // determine whether change is positive or negative\n        let changeIndicator = '';\n        let changeColor = e.style.color;\n        if (change > 0) {\n            changeIndicator = '\\x73'; // ▲\n            changeColor = 'darkgreen';\n        }\n        else if (change < 0) {\n            changeIndicator = '\\x74'; // ▼\n            changeColor = 'darkred';\n        }\n        // draw change indicator\n        let indent = 10;\n        e.canvas.drawText(changeIndicator, e.contentRect.right - indent, e.contentRect.top + indent, {\n            brush: changeColor,\n            font: Fonts.ZapfDingbatsSm\n        });\n        // draw change text\n        indent += 3;\n        e.canvas.drawText(changeText, e.contentRect.left, e.textTop, {\n            brush: changeColor,\n            align: wjcPdf.PdfTextHorizontalAlign.Right,\n            width: e.contentRect.width - indent\n        });\n        // cancel standard cell content drawing\n        e.cancel = true;\n    }\n    _formatPdfHistoryCell(e, cell) {\n        e.drawBackground(e.style.backgroundColor);\n        // draw history svg\n        const svgUrl = this._getHistorySvgDataUrlFromCell(cell, e.clientRect.width, e.clientRect.height);\n        if (svgUrl) {\n            let cr = e.contentRect;\n            e.canvas.drawSvg(svgUrl, cr.left + 2, cr.top + 2, { width: cr.width - 4, height: cr.height - 4 });\n        }\n        // cancel standard cell content drawing\n        e.cancel = true;\n    }\n    _getHistorySvgDataUrlFromCell(cell, width, height) {\n        let dataUrl = null;\n        // extract SVG from provided cell\n        const svg = cell.getElementsByTagName('svg')[0];\n        if (svg) {\n            const clone = svg.cloneNode(true);\n            clone.setAttribute('version', '1.1');\n            clone.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', 'http://www.w3.org/2000/svg');\n            clone.style.overflow = 'visible';\n            clone.style.stroke = '#376092';\n            clone.style.fill = '#376092';\n            const s = document.createElement('style');\n            s.setAttribute('type', 'text/css');\n            s.innerHTML = `<![CDATA[\n          line { \n              stroke-width: 2;\n          }\n          circle { \n              stroke-width: 0;\n              stroke-opacity: 0; \n          }\n          .wj-marker { \n              fill: #d00000; \n              opacity: 1; \n          }\n      ]]>`;\n            const defs = document.createElement('defs');\n            defs.appendChild(s);\n            clone.insertBefore(defs, clone.firstChild);\n            const outer = document.createElement('div');\n            outer.appendChild(clone);\n            dataUrl = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(outer.innerHTML)));\n        }\n        return dataUrl;\n    }\n    _formatPdfRatingCell(e) {\n        e.drawBackground(e.style.backgroundColor);\n        // check whether rating is defined\n        let rating = wjcCore.changeType(e.data, wjcCore.DataType.Number);\n        if (wjcCore.isInt(rating)) {\n            const ratingIndicator = '\\x48'; // ★\n            const ratingNormalColor = wjcCore.Color.fromRgba(255, 165, 0, 1); // orange\n            const ratingLightColor = wjcCore.Color.fromRgba(255, 165, 0, 0.2);\n            // draw rating indicators\n            const indent = 16;\n            const count = 5;\n            const width = count * indent;\n            const y = e.clientRect.top + indent;\n            let x = e.contentRect.left + (e.contentRect.width - width) / 2;\n            rating = wjcCore.clamp(rating, 1, count);\n            for (let i = 0; i < count; i++) {\n                e.canvas.drawText(ratingIndicator, x, y, {\n                    brush: (i < rating) ? ratingNormalColor : ratingLightColor,\n                    font: Fonts.ZapfDingbatsLg,\n                    height: e.clientRect.height\n                });\n                x += indent;\n            }\n        }\n        // cancel standard cell content drawing\n        e.cancel = true;\n    }\n    _isCountryExist(countryName, countryMap) {\n        const countryId = countryMap.getKeyValue(countryName);\n        if (wjcCore.isUndefined(countryId) || countryId === null) {\n            return false;\n        }\n        if (countryId === Country.NotFound.id) {\n            return false;\n        }\n        return true;\n    }\n    _isColorExist(colorName, colorMap) {\n        const colorId = colorMap.getKeyValue(colorName);\n        if (wjcCore.isUndefined(colorId) || colorId === null) {\n            return false;\n        }\n        if (colorId === KeyValue.NotFound.key) {\n            return false;\n        }\n        return true;\n    }\n    _createCellFromCellTemplate(cellTemplate, data) {\n        const cell = document.createElement('div');\n        cellTemplate({\n            col: FakeColumn,\n            row: FakeRow,\n            value: data,\n            item: null,\n            text: null\n        }, cell);\n        return cell;\n    }\n}\n","import '@grapecity/wijmo.styles/wijmo.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../styles/AddItemDragablePopup.css';\r\n//\r\nimport * as React from 'react';\r\n//\r\nimport * as wjInput from '@grapecity/wijmo.react.input';\r\n//\r\nexport class AddItemDragablePopup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initLoginForm = (popup) => {\r\n            this.setState({ frmLoginPopup: popup });\r\n        };\r\n        this.state = {\r\n            frmLoginPopup: props.PopupForm\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <button className=\"btn btn-warning mr-1\" onClick={() => this.state.frmLoginPopup.show(true)}>\r\n                    Add item\r\n            </button>\r\n\r\n                <wjInput.Popup isDraggable={true} initialized={this.initLoginForm}>\r\n                    <form>\r\n                        <div className=\"wj-dialog-header\">\r\n                            Add new item\r\n                        <button type=\"button\" className=\"close wj-hide\">&times;</button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <label>\r\n                                Date:\r\n                            <input className=\"form-control\" required type=\"date\" />\r\n                            </label>\r\n                            <br />\r\n                            <label>\r\n                                Country:\r\n                            <input className=\"form-control\" type=\"password\" required pattern=\".{4,}\" title=\"Please enter 4 characters or more.\" />\r\n                            </label>\r\n                            <br />\r\n                            <label>\r\n                                Price:\r\n                            <input className=\"form-control\" required type=\"number\" />\r\n                            </label>\r\n                            <br />\r\n                            <label>\r\n                                Rating:\r\n                            <input className=\"form-control\" required type=\"number\" />\r\n                            </label>\r\n                            <br />\r\n                            <label>\r\n                                Time:\r\n                            <input className=\"form-control\" required type=\"number\" />\r\n                            </label>\r\n                            <br />\r\n                            <label>\r\n                                Color:\r\n                            <input className=\"form-control\" required type=\"number\" />\r\n                            </label>\r\n                            <br />\r\n                            <label>\r\n                                Product:\r\n                            <input className=\"form-control\" required type=\"number\" />\r\n                            </label>\r\n                            <br />\r\n                            <label>\r\n                                Discount:\r\n                            <input className=\"form-control\" required type=\"number\" />\r\n                            </label>\r\n                            <br />\r\n                            <label>\r\n                                Active:\r\n                            <input className=\"form-control\" required type=\"checkbox\" />\r\n                            </label>\r\n                            <br />\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"btn btn-warning mr-1\" type=\"submit\">\r\n                                Add\r\n                        </button>\r\n                        </div>\r\n                    </form>\r\n                </wjInput.Popup>\r\n            </div>);\r\n    }\r\n}\r\n","import '@grapecity/wijmo.styles/wijmo.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../styles/AddItemDragablePopup.css';\r\n//\r\nimport * as React from 'react';\r\n//\r\nimport * as wjInput from '@grapecity/wijmo.react.input';\r\n//\r\nexport class EditItemDragablePopup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initLoginForm = (popup) => {\r\n            this.setState({ frmLoginPopup: popup });\r\n        };\r\n        this.state = {\r\n            frmLoginPopup: props.PopupForm\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <button className=\"btn btn-warning mr-1\" onClick={() => this.state.frmLoginPopup.show(true)}>\r\n                    Edit item\r\n            </button>\r\n\r\n                <wjInput.Popup isDraggable={true} initialized={this.initLoginForm}>\r\n                    <form>\r\n                        <div className=\"wj-dialog-header\">\r\n                            Edit item\r\n                        <button type=\"button\" className=\"close wj-hide\">&times;</button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <label>\r\n                                Email:\r\n                            <input className=\"form-control\" required type=\"email\" />\r\n                            </label>\r\n                            <br />\r\n                            <label>\r\n                                Password:\r\n                            <input className=\"form-control\" type=\"password\" required pattern=\".{4,}\" title=\"Please enter 4 characters or more.\" />\r\n                            </label>\r\n                            <br />\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"btn btn-warning mr-1\" type=\"submit\">\r\n                                Edit\r\n                        </button>\r\n                        </div>\r\n                    </form>\r\n                </wjInput.Popup>\r\n            </div>);\r\n    }\r\n}\r\n","import '@grapecity/wijmo.styles/wijmo.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../styles/AddItemDragablePopup.css';\r\n//\r\nimport * as React from 'react';\r\n//\r\nimport * as wjInput from '@grapecity/wijmo.react.input';\r\n//\r\nexport class DeleteItemDragablePopup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initLoginForm = (popup) => {\r\n            this.setState({ frmLoginPopup: popup });\r\n        };\r\n        this.state = {\r\n            frmLoginPopup: props.PopupForm\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <button className=\"btn btn-warning mr-1\" onClick={() => this.state.frmLoginPopup.show(true)}>\r\n                    Delete item\r\n            </button>\r\n\r\n                <wjInput.Popup isDraggable={true} initialized={this.initLoginForm}>\r\n                    <form>\r\n                        <div className=\"wj-dialog-header\">\r\n                            Delete item\r\n                        <button type=\"button\" className=\"close wj-hide\">&times;</button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <label>\r\n                                Date:\r\n                            <input className=\"form-control\" required type=\"date\" />\r\n                            </label>\r\n                            <br />\r\n                            <label>\r\n                                Country:\r\n                            <input className=\"form-control\" type=\"password\" required pattern=\".{4,}\" title=\"Please enter 4 characters or more.\" />\r\n                            </label>\r\n                            <br />\r\n                            <label>\r\n                                Price:\r\n                            <input className=\"form-control\" required type=\"number\" />\r\n                            </label>\r\n                            <br />\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"btn btn-warning mr-1\" type=\"submit\">\r\n                                Delete\r\n                        </button>\r\n                        </div>\r\n                    </form>\r\n                </wjInput.Popup>\r\n            </div>);\r\n    }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\nimport '@grapecity/wijmo.styles/wijmo.css';\nimport '../styles/WijmoGrid.css';\n//\nimport * as React from 'react';\n//\nimport '@grapecity/wijmo.touch';\nimport * as wjCore from '@grapecity/wijmo';\nimport { InputDate, InputTime } from '@grapecity/wijmo.input';\nimport { CellMaker, SparklineMarkers } from '@grapecity/wijmo.grid.cellmaker';\nimport { DataMap } from '@grapecity/wijmo.grid';\nimport { FlexGrid, FlexGridColumn, FlexGridCellTemplate } from '@grapecity/wijmo.react.grid';\nimport { FlexGridFilter } from '@grapecity/wijmo.react.grid.filter';\nimport { FlexGridSearch } from '@grapecity/wijmo.react.grid.search';\nimport { GroupPanel as FlexGridGroupPanel } from '@grapecity/wijmo.react.grid.grouppanel';\nimport { DataService, Country, KeyValue } from '../configs/Data';\nimport { ExportService } from '../services/Export';\nimport { AddItemDragablePopup } from './AddItemDragablePopup';\nimport { EditItemDragablePopup } from './EditItemDragablePopup';\nimport { DeleteItemDragablePopup } from './DeleteItemDragablePopup';\n//\nconst dataService = new DataService();\nconst exportService = new ExportService();\nexport class WijmoGrid extends React.Component {\n    //    \n    constructor(props) {\n        super(props);\n        //\n        this.countryCellTemplate = (ctx) => {\n            const country = this._countryMap.getDataItem(ctx.item.countryId) || Country.NotFound;\n            return (<React.Fragment>\n                <span className={`flag-icon flag-icon-${country.flag}`} />\n                {' '}{country.name}{' '}\n            </React.Fragment>);\n        };\n        //\n        this.colorCellTemplate = (ctx) => {\n            const color = (this._colorMap.getDataItem(ctx.item.colorId) || KeyValue.NotFound).value;\n            return (<React.Fragment>\n                <span className=\"color-tile\" style={{ background: color }} />\n                {' '}{color}{' '}\n            </React.Fragment>);\n        };\n        //\n        this.changeCellTemplate = (ctx) => {\n            const change = ctx.item.change;\n            let cssClass = '';\n            let displayValue = '';\n            if (wjCore.isNumber(change)) {\n                if (change > 0) {\n                    cssClass = 'change-up';\n                }\n                else if (change < 0) {\n                    cssClass = 'change-down';\n                }\n                displayValue = wjCore.Globalize.formatNumber(change, 'c');\n            }\n            else if (!wjCore.isUndefined(change) && change !== null) {\n                displayValue = wjCore.changeType(change, wjCore.DataType.String);\n            }\n            return (<span className={cssClass}>\n                {displayValue}\n            </span>);\n        };\n        //\n        this.gridInitialized = (ctl) => {\n            this.setState({ flex: ctl }, () => {\n                this.state.flex.itemsSource = this._createItemsSource(this.state.itemsCount);\n            });\n        };\n        //\n        this.itemsCountChanged = (e) => {\n            this.setState({\n                itemsCount: parseInt(e.target.value),\n            }, () => {\n                this.state.flex.itemsSource.collectionChanged.removeAllHandlers();\n                this._lastId = this.state.itemsCount;\n                this.state.flex.itemsSource = this._createItemsSource(this.state.itemsCount);\n            });\n        };\n        //\n        this.exportToExcel = () => {\n            //const exportService = this.props.exportService;\n            const { isExcelPreparing: preparing, isExcelExporting: exporting } = this.state;\n            const resetState = () => this.setState({\n                isExcelPreparing: false,\n                isExcelExporting: false,\n                excelProgress: 0,\n            });\n            if (!preparing && !exporting) {\n                this.setState({ isExcelPreparing: true });\n                exportService.startExcelExport(this.state.flex, () => {\n                    console.log('Export to Excel completed');\n                    resetState();\n                }, err => {\n                    console.error(`Export to Excel failed: ${err}`);\n                    resetState();\n                }, prg => {\n                    this.setState({\n                        isExcelPreparing: false,\n                        isExcelExporting: true,\n                        excelProgress: prg,\n                    });\n                });\n                console.log('Export to Excel started');\n            }\n            else {\n                exportService.cancelExcelExport(progress => {\n                    console.log('Export to Excel canceled');\n                    resetState();\n                });\n            }\n        };\n        //\n        this.exportToPdf = () => {\n            /*this.props.*/exportService.exportToPdf(this.state.flex, {\n            countryMap: this._countryMap,\n            colorMap: this._colorMap,\n            historyCellTemplate: this._historyCellTemplate\n        });\n        };\n        this.state = {\n            itemsCount: 500,\n            flex: null,\n            isExcelPreparing: false,\n            isExcelExporting: false,\n            excelProgress: 0,\n            popup: {},\n            showAddPopup: false\n        };\n        this.theGrid = React.createRef();\n        this.theSearch = React.createRef();\n        this._lastId = this.state.itemsCount;\n        // initializes data maps\n        //const dataService = props.dataService;\n        this._productMap = this._buildDataMap(dataService.getProducts());\n        this._countryMap = new DataMap(dataService.getCountries(), 'id', 'name');\n        this._colorMap = this._buildDataMap(dataService.getColors());\n        // initialize editors\n        this._dateEditor = new InputDate(document.createElement('div'), {\n            format: 'MM/dd/yyyy',\n            isRequired: false\n        });\n        this._timeEditor = new InputTime(document.createElement('div'), {\n            format: 'HH:mm',\n            isRequired: false\n        });\n        // initializes cell templates\n        this._historyCellTemplate = CellMaker.makeSparkline({\n            markers: SparklineMarkers.High | SparklineMarkers.Low,\n            maxPoints: 25,\n            label: 'price history',\n        });\n        this._ratingCellTemplate = CellMaker.makeRating({\n            range: [1, 5],\n            label: 'rating'\n        });\n    }\n    //\n    componentDidMount() {\n        // connect search box and grid\n        let theGrid = this.theGrid.current.control;\n        let theSearch = this.theSearch.current.control;\n        theSearch.grid = theGrid;\n    }\n    //\n    componentWillUnmount() {\n        /*this.props.*/exportService.cancelExcelExport();\n    }\n    //\n    render() {\n        return (<div className=\"container-grid\">\n            <div className=\"border\">\n                <div className=\"row\">\n                    <div className=\"col-sm-3 col-md-5\">\n                        <FlexGridSearch ref={this.theSearch} placeholder=\"Search\" cssMatch=\"\" />\n                    </div>\n\n                    <div className=\"toolbar-item col-sm-3 col-md-3\">\n                        <div className=\"input-group\">\n                            <span className=\"input-group-addon\">Items:</span>\n                            <select className=\"form-control\" value={this.state.itemsCount} onChange={this.itemsCountChanged}>\n                                <option value=\"5\">5</option>\n                                <option value=\"50\">50</option>\n                                <option value=\"500\">500</option>\n                                <option value=\"5000\">5,000</option>\n                                <option value=\"50000\">50,000</option>\n                                <option value=\"100000\">100,000</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"row-buttons-menu\">\n                        <AddItemDragablePopup />\n                        <EditItemDragablePopup />\n                        <DeleteItemDragablePopup />\n                    </div>\n                </div>\n            </div>\n\n            <FlexGridGroupPanel grid={this.state.flex} placeholder={\"Drag columns here to create groups\"} />\n\n            <FlexGrid ref={this.theGrid} autoGenerateColumns={false} allowAddNew allowDelete allowPinning=\"SingleColumn\" showMarquee selectionMode=\"MultiRange\" validateEdits={false} initialized={this.gridInitialized}>\n                <FlexGridFilter />\n\n                <FlexGridColumn header=\"ID\" binding=\"id\" width={90} isReadOnly={true} />\n                <FlexGridColumn header=\"Date\" binding=\"date\" format=\"MMM d yyyy\" isRequired={false} width={150} editor={this._dateEditor}>\n                </FlexGridColumn>\n                <FlexGridColumn header=\"Country\" binding=\"countryId\" dataMap={this.countryMap} width={145}>\n                    <FlexGridCellTemplate cellType=\"Cell\" template={this.countryCellTemplate} />\n                </FlexGridColumn>\n                <FlexGridColumn header=\"Price\" binding=\"price\" format=\"c\" isRequired={false} width={150} />\n                <FlexGridColumn header=\"History\" binding=\"history\" align=\"center\" width={250} allowSorting={false} cellTemplate={this.historyCellTemplate} />\n                <FlexGridColumn header=\"Change\" binding=\"change\" align=\"right\" width={155}>\n                    <FlexGridCellTemplate cellType=\"Cell\" template={this.changeCellTemplate} />\n                </FlexGridColumn>\n                <FlexGridColumn header=\"Rating\" binding=\"rating\" align=\"center\" width={180} cssClass=\"cell-rating\" cellTemplate={this.ratingCellTemplate} />\n                <FlexGridColumn header=\"Time\" binding=\"time\" format=\"HH:mm\" isRequired={false} width={115} editor={this._timeEditor}>\n                </FlexGridColumn>\n                <FlexGridColumn header=\"Color\" binding=\"colorId\" dataMap={this.colorMap} width={150}>\n                    <FlexGridCellTemplate cellType=\"Cell\" template={this.colorCellTemplate} />\n                </FlexGridColumn>\n                <FlexGridColumn header=\"Product\" binding=\"productId\" dataMap={this.productMap} width={150} />\n                <FlexGridColumn header=\"Discount\" binding=\"discount\" format=\"p0\" width={150} />\n                <FlexGridColumn header=\"Active\" binding=\"active\" width={120} />\n            </FlexGrid>\n            <div className=\"row-buttons\">\n                <button className=\"btn btn-warning mr-1\" disabled={this.state.isExcelPreparing} onClick={this.exportToExcel}>\n                    {this.state.isExcelExporting ? `Cancel (${this.state.excelProgress}% done)` : 'Export To Excel'}\n                </button>\n\n                <button className=\"btn btn-warning mr-1\" onClick={this.exportToPdf}>Export To PDF</button>\n                <button className=\"btn btn-warning mr-1\" >Show chart</button>\n            </div>\n        </div>\n        );\n    }\n    //\n    //\n    get productMap() {\n        return this._productMap;\n    }\n    //\n    get countryMap() {\n        return this._countryMap;\n    }\n    //\n    get colorMap() {\n        return this._colorMap;\n    }\n    //\n    get historyCellTemplate() {\n        return this._historyCellTemplate;\n    }\n    //\n    get ratingCellTemplate() {\n        return this._ratingCellTemplate;\n    }\n    //\n    _createItemsSource(counter) {\n        const data = /*this.props.*/dataService.getData(counter);\n        const view = new wjCore.CollectionView(data, {\n            getError: (item, prop) => {\n                const displayName = this.state.flex.columns.getColumn(prop).header;\n                return /*this.props.*/dataService.validate(item, prop, displayName);\n            }\n        });\n        view.collectionChanged.addHandler((s, e) => {\n            // initializes new added item with a history data\n            if (e.action === wjCore.NotifyCollectionChangedAction.Add) {\n                e.item.history = /*this.props.*/dataService.getHistoryData();\n                e.item.id = this._lastId;\n                this._lastId++;\n            }\n        });\n        return view;\n    }\n    // build a data map from a string array using the indices as keys\n    _buildDataMap(items) {\n        const map = [];\n        for (let i = 0; i < items.length; i++) {\n            map.push({ key: i, value: items[i] });\n        }\n        return new DataMap(map, 'key', 'value');\n    }\n}\n\n// ReactDOM.render(<App dataService={new DataService()} exportService={new ExportService()}/>, document.getElementById('app'));","const particlesConfig = {\r\n    \"particles\": {\r\n      \"number\": {\r\n        \"value\": 80,\r\n        \"density\": {\r\n          \"enable\": true,\r\n          \"value_area\": 800\r\n        }\r\n      },\r\n      \"color\": {\r\n        \"value\": \"#ffffff\"\r\n      },\r\n      \"shape\": {\r\n        \"type\": \"circle\",\r\n        \"stroke\": {\r\n          \"width\": 0,\r\n          \"color\": \"#000000\"\r\n        },\r\n        \"polygon\": {\r\n          \"nb_sides\": 5\r\n        },\r\n        \"image\": {\r\n          \"src\": \"img/github.svg\",\r\n          \"width\": 100,\r\n          \"height\": 100\r\n        }\r\n      },\r\n      \"opacity\": {\r\n        \"value\": 0.5,\r\n        \"random\": false,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 1,\r\n          \"opacity_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"size\": {\r\n        \"value\": 3,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 40,\r\n          \"size_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"line_linked\": {\r\n        \"enable\": true,\r\n        \"distance\": 150,\r\n        \"color\": \"#ffffff\",\r\n        \"opacity\": 0.4,\r\n        \"width\": 1\r\n      },\r\n      \"move\": {\r\n        \"enable\": true,\r\n        \"speed\": 6,\r\n        \"direction\": \"none\",\r\n        \"random\": false,\r\n        \"straight\": false,\r\n        \"out_mode\": \"out\",\r\n        \"bounce\": false,\r\n        \"attract\": {\r\n          \"enable\": false,\r\n          \"rotateX\": 600,\r\n          \"rotateY\": 1200\r\n        }\r\n      }\r\n    },\r\n    \"interactivity\": {\r\n      \"detect_on\": \"canvas\",\r\n      \"events\": {\r\n        \"onhover\": {\r\n          \"enable\": true,\r\n          \"mode\": \"repulse\"\r\n        },\r\n        \"onclick\": {\r\n          \"enable\": true,\r\n          \"mode\": \"push\"\r\n        },\r\n        \"resize\": true\r\n      },\r\n      \"modes\": {\r\n        \"grab\": {\r\n          \"distance\": 400,\r\n          \"line_linked\": {\r\n            \"opacity\": 1\r\n          }\r\n        },\r\n        \"bubble\": {\r\n          \"distance\": 400,\r\n          \"size\": 40,\r\n          \"duration\": 2,\r\n          \"opacity\": 8,\r\n          \"speed\": 3\r\n        },\r\n        \"repulse\": {\r\n          \"distance\": 200,\r\n          \"duration\": 0.4\r\n        },\r\n        \"push\": {\r\n          \"particles_nb\": 4\r\n        },\r\n        \"remove\": {\r\n          \"particles_nb\": 2\r\n        }\r\n      }\r\n    },\r\n    \"retina_detect\": true\r\n  };\r\n  \r\n  export default particlesConfig;","import { Route, Router } from 'react-router';\nimport { Login } from './views/Login';\nimport { Contact } from './views/Contact';\nimport { AnalyticsView } from './views/AnalyticsView';\nimport { WijmoGrid } from './components/WijmoGrid';\nimport history from './services/History';\nimport './styles/App.css';\nimport Particles from 'react-particles-js';\nimport ParticlesConfig from './configs/ParticlesConfig';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ position: 'relative', overflow: \"hidden\" }}>\n      <div style={{ position: 'absolute' }}>\n        <Particles height=\"100vh\" width=\"100vw\" params={ParticlesConfig} />\n      </div>\n      <header className=\"App-header\">\n        <Router history = {history}>\n          <Route exact path='/' component={Login} />\n          <Route exact path='/WorkshopManager_Web/' component={Login} />\n          <Route exact path='/Contact' component={Contact} />\n          <Route exact path='/AnalyticsView' component={AnalyticsView} />\n          <Route exact path='/WorkshopManager_Web/WijmoGrid' component={WijmoGrid} />\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst baseUrl = document.getElementsByTagName('base')[0];\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <BrowserRouter basename={String(baseUrl)} >\n    <App />\n  </BrowserRouter>,\n  rootElement);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}